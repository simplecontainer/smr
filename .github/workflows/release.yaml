name: Simplecontainer release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
        platform: [ 'amd64', 'arm64' ]
        os: [ 'linux' ]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Test code
        run: CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.platform }} go test ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
        platform: [ 'amd64', 'arm64' ]
        os: [ 'linux' ]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
      - name: Display Go version
        run: go version
      - name: Build code
        run: |
          echo ${{ github.ref_name }} > version
          
          CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.platform }} go build -ldflags '-s -w'
          chmod +x smr
          
          if echo ${{ matrix.os }} | grep -qv darwin; then
            upx -9 smr
          fi
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smr-${{ matrix.os}}-${{ matrix.platform }}
          path: |
            smr

  dockerize:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false

      - name: Download smr amd64
        uses: actions/download-artifact@v4
        with:
          name: smr-linux-amd64
          path: smr-linux-amd64

      - name: Download smr arm64
        uses: actions/download-artifact@v4
        with:
          name: smr-linux-arm64
          path: smr-linux-arm64

      - name: Build and push docker image
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | docker login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin
          
          docker buildx create --use
          docker buildx build --push --file docker/Dockerfile --tag quay.io/simplecontainer/smr:${{ github.ref_name }} --platform linux/amd64,linux/arm64 .
  release:
    runs-on: ubuntu-latest
    needs: [ dockerize ]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false
      - name: Git kungfu
        run: |
          git tag -d ${{ github.ref_name }}
          git push --delete origin ${{ github.ref_name }}

          # Update version to match tag version, git push in next step
          echo ${{ github.ref_name }} > version
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automated version tracking [no ci]

          branch: main
          file_pattern: 'version'
          repository: .
          tagging_message: '${{ github.ref_name }}'
          push_options: '--force'

          commit_user_name: bot
          commit_user_email: bot@qdnqn.org
          commit_author: Author <actions@github.com>
      - uses: ncipollo/release-action@v1
        with:
          body: "Automatically created - fill in accordingly"
          allowUpdates: true
          draft: false
          tag: ${{ github.ref_name }}